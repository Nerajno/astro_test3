---
import EventCard from './eventcard.astro';

interface Event {
  id: string;
  title: string;
  description: string;
  date: string;
  location: {
    city: string;
    state: string;
    country: string;
    venue?: string;
  };
  links: {
    video?: string;
    article?: string;
    conferenceWebsite?: string;
    slides?: string;
    github?: string;
  };
  status: 'upcoming' | 'past';
  type: 'conference' | 'workshop' | 'meetup' | 'webinar';
  tags?: string[];
}

interface Props {
  events: Event[];
}

const { events } = Astro.props;
const upcomingEvents = events.filter(event => event.status === 'upcoming');
const pastEvents = events.filter(event => event.status === 'past');
---

<div class="space-y-12">
  {upcomingEvents.length > 0 && (
    <section>
      <h2 class="text-3xl font-bold mb-6 text-gray-900">Upcoming Events</h2>
      <div class="space-y-6">
        {upcomingEvents.map(event => (
          <EventCard {...event} />
        ))}
      </div>
    </section>
  )}

  {pastEvents.length > 0 && (
    <section>
      <h2 class="text-3xl font-bold mb-6 text-gray-900">Past Events</h2>
      <div class="space-y-6">
        {pastEvents.map(event => (
          <EventCard {...event} />
        ))}
      </div>
    </section>
  )}

  {events.length === 0 && (
    <p class="text-center text-gray-500 py-12">No events found.</p>
  )}
</div>

// src/pages/speaking.astro
---
import { speakingData } from '../data/speakingData';
import Layout from '../layouts/Layout.astro';
import Container from '../components/Container.astro';
import Sectionhead from '../components/Sectionhead.astro';
import EventList from '../components/eventList.astro';

// Process and sort events
const processedEvents = speakingData.map(event => ({
  ...event,
  status: new Date(event.date) > new Date() ? 'upcoming' : 'past'
}));

const sortedEvents = [...processedEvents].sort((a, b) => {
  if (a.status === 'upcoming' && b.status !== 'upcoming') return -1;
  if (a.status !== 'upcoming' && b.status === 'upcoming') return 1;
  return new Date(b.date).getTime() - new Date(a.date).getTime();
});
---

<Layout title="Speaking Engagements">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Speaking Engagements</Fragment>
      <Fragment slot="desc">
        Join me at upcoming events or explore past presentations
      </Fragment>
    </Sectionhead>

    <div class="flex flex-col gap-3 mx-auto max-w-4xl mt-16">
      <p class="text-lg leading-relaxed text-gray-600">
        I regularly speak at conferences, workshops, and meetups about web development,
        developer experience, and building inclusive tech communities. Here you'll find
        my upcoming speaking engagements and recordings of past events.
      </p>
    </div>

    <div class="mx-auto max-w-4xl mt-12">
      <EventList events={sortedEvents} />
    </div>
  </Container>
</Layout>
