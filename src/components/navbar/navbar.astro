---
import Container from '@components/container.astro';
import Dropdown from './dropdown.astro';
import { Astronav, MenuItems, MenuIcon } from 'astro-navbar';

const menuitems = [
  {
    title: 'Home',
    path: '/',
  },
  {
    title: 'Blog',
    path: '/blog',
  },
  {
    title: 'Portfolio',
    path: '/portfolio',
  },
  {
    title: 'Speaking',
    path: '/speaking',
  },
  {
    title: 'About',
    path: '/about',
  },
  {
    title: 'Junior~ish',
    badge: true,
    path: 'https://nerajnodigitalgarden.netlify.app',
    target: '_blank',
    rel: 'noopener',
  },
  {
    title: 'Contact',
    path: '/contact',
  },
];
---

<Container>
  <header class='flex flex-col lg:flex-row justify-between items-center my-5'>
    <button
      id='theme-toggle'
      type='button'
      class='text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5'>
      <svg
        id='theme-toggle-dark-icon'
        class='hidden w-5 h-5'
        fill='currentColor'
        viewBox='0 0 20 20'
        xmlns='http://www.w3.org/2000/svg'>
        <path
          d='M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z'
        ></path>
      </svg>
      <svg
        id='theme-toggle-light-icon'
        class='hidden w-5 h-5'
        fill='currentColor'
        viewBox='0 0 20 20'
        xmlns='http://www.w3.org/2000/svg'>
        <path
          d='M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z'
          fill-rule='evenodd'
          clip-rule='evenodd'></path>
      </svg>
    </button>
    <Astronav>
      <div class='flex w-full lg:w-auto items-center justify-between'>
        <a href='/' class='text-lg'
          ><span class='font-bold text-slate-800 dark:text-white'>NJ</span>
        </a>
        <div class='block lg:hidden'>
          <MenuIcon class='w-4 h-4 text-gray-800 dark:text-white' />
        </div>
      </div>
      <MenuItems class='hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0'>
        <ul class='flex flex-col lg:flex-row lg:gap-3'>
          {
            menuitems.map((item, index) => (
              <>
                {'children' in item && (
                  <Dropdown
                    title={item.title}
                    children={item.children}
                    lastItem={index === menuitems.length - 1}
                  />
                )}

                {!('children' in item) && (
                  <li>
                    <a
                      href={item.path}
                      class='flex lg:px-3 py-2 items-center text-gray-600 hover:text-gray-900'>
                      <span> {item.title}</span>
                      {item.badge && (
                        <span class='ml-1 px-2 py-0.5 text-[10px] animate-pulse font-semibold uppercase text-white bg-indigo-600 rounded-full'>
                          New
                        </span>
                      )}
                    </a>
                  </li>
                )}
              </>
            ))
          }
        </ul>
      </MenuItems>
    </Astronav>
  </header>
</Container>

<script>
  function setTheme(isDark) {
    if (isDark) {
      document.documentElement.classList.add('dark');
      document.documentElement.classList.remove('light');
      localStorage.setItem('color-theme', 'dark');
    } else {
      document.documentElement.classList.remove('dark');
      document.documentElement.classList.add('light');
      localStorage.setItem('color-theme', 'light');
    }
  }

  // Check for saved theme preference, otherwise use system preference
  const isDarkMode =
    localStorage.getItem('color-theme') === 'dark' ||
    (!('color-theme' in localStorage) &&
      window.matchMedia('(prefers-color-scheme: dark)').matches);

  // Set initial theme
  setTheme(isDarkMode);

  const themeToggleBtn = document.getElementById('theme-toggle');
  const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
  const themeToggleLightIcon = document.getElementById(
    'theme-toggle-light-icon'
  );

  // Set initial icon state
  if (document.documentElement.classList.contains('dark')) {
    themeToggleLightIcon?.classList.remove('hidden');
  } else {
    themeToggleDarkIcon?.classList.remove('hidden');
  }

  themeToggleBtn?.addEventListener('click', function () {
    // Toggle icons
    themeToggleDarkIcon?.classList.toggle('hidden');
    themeToggleLightIcon?.classList.toggle('hidden');

    // Toggle dark mode
    if (document.documentElement.classList.contains('dark')) {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('color-theme', 'light');
    } else {
      document.documentElement.classList.add('dark');
      localStorage.setItem('color-theme', 'dark');
    }
  });
</script>
